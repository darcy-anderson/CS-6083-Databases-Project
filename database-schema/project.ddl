-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2022-11-07 17:37:00 EST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE author (
    author_id     NUMBER(9) NOT NULL,
    author_fname  VARCHAR2(30) NOT NULL,
    author_mname  VARCHAR2(30),
    author_lname  VARCHAR2(30) NOT NULL,
    author_street VARCHAR2(30),
    author_city   VARCHAR2(30),
    author_state  CHAR(2),
    author_zip    CHAR(5),
    author_email  VARCHAR2(30)
);

ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( author_id );

CREATE TABLE book (
    book_id    NUMBER(9) NOT NULL,
    book_title VARCHAR2(100) NOT NULL,
    book_topic VARCHAR2(30) NOT NULL
);

ALTER TABLE book ADD CONSTRAINT book_pk PRIMARY KEY ( book_id );

CREATE TABLE book_author (
    book_id   NUMBER(9) NOT NULL,
    author_id NUMBER(9) NOT NULL
);

ALTER TABLE book_author ADD CONSTRAINT book_author_pk PRIMARY KEY ( book_id,
                                                                    author_id );

CREATE TABLE book_copy (
    copy_id     NUMBER(9) NOT NULL,
    copy_status CHAR(1) NOT NULL,
    book_id     NUMBER(9) NOT NULL
);

ALTER TABLE book_copy ADD CONSTRAINT book_copy_pk PRIMARY KEY ( copy_id );

CREATE TABLE book_rental (
    rental_id       NUMBER(9) NOT NULL,
    rental_status   CHAR(1) NOT NULL,
    borrow_date     DATE NOT NULL,
    exp_return_date DATE NOT NULL,
    return_date     DATE,
    copy_id         NUMBER(9) NOT NULL,
    invoice_id      NUMBER(9),
    cust_id         NUMBER(9) NOT NULL
);

CREATE UNIQUE INDEX book_rental__idx ON
    book_rental (
        invoice_id
    ASC );

ALTER TABLE book_rental ADD CONSTRAINT book_rental_pk PRIMARY KEY ( rental_id );

CREATE TABLE customer (
    cust_id     NUMBER(9) NOT NULL,
    cust_fname  VARCHAR2(30) NOT NULL,
    cust_mname  VARCHAR2(30),
    cust_lname  VARCHAR2(30) NOT NULL,
    cust_street VARCHAR2(30) NOT NULL,
    cust_city   VARCHAR2(30) NOT NULL,
    cust_state  CHAR(2) NOT NULL,
    cust_zip    CHAR(5) NOT NULL,
    cust_email  VARCHAR2(30) NOT NULL,
    cust_phone  VARCHAR2(10) NOT NULL,
    id_type     VARCHAR2(14) NOT NULL,
    id_number   NUMBER(9) NOT NULL
);

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( cust_id );

CREATE TABLE event (
    event_id    NUMBER(9) NOT NULL,
    event_name  VARCHAR2(30) NOT NULL,
    event_topic VARCHAR2(30) NOT NULL,
    start_time  DATE NOT NULL,
    end_time    DATE NOT NULL,
    event_type  CHAR(1) NOT NULL
);

ALTER TABLE event
    ADD CONSTRAINT ch_inh_event CHECK ( event_type IN ( 'E', 'EVENT', 'S' ) );

ALTER TABLE event ADD CONSTRAINT event_pk PRIMARY KEY ( event_id );

CREATE TABLE exhib_expense (
    expense_id       NUMBER(9) NOT NULL,
    expense_amount   NUMBER(13, 2) NOT NULL,
    expense_descript VARCHAR2(100) NOT NULL,
    event_id         NUMBER(9) NOT NULL
);

ALTER TABLE exhib_expense ADD CONSTRAINT exhib_expense_pk PRIMARY KEY ( expense_id );

CREATE TABLE exhibition (
    event_id NUMBER(9) NOT NULL
);

ALTER TABLE exhibition ADD CONSTRAINT exhibition_pk PRIMARY KEY ( event_id );

CREATE TABLE exhibition_attendee (
    invitation_id NUMBER(9) NOT NULL,
    cust_id       NUMBER(9) NOT NULL,
    event_id      NUMBER(9) NOT NULL
);

ALTER TABLE exhibition_attendee ADD CONSTRAINT exhibition_attendee_pk PRIMARY KEY ( invitation_id );

CREATE TABLE individual (
    sponsor_id    NUMBER(9) NOT NULL,
    sponsor_fname VARCHAR2(30) NOT NULL,
    sponsor_mname VARCHAR2(30),
    sponsor_lname VARCHAR2(30) NOT NULL
);

ALTER TABLE individual ADD CONSTRAINT individual_pk PRIMARY KEY ( sponsor_id );

CREATE TABLE organization (
    sponsor_id NUMBER(9) NOT NULL,
    org_name   VARCHAR2(30) NOT NULL
);

ALTER TABLE organization ADD CONSTRAINT organization_pk PRIMARY KEY ( sponsor_id );

CREATE TABLE rental_invoice (
    invoice_id     NUMBER(9) NOT NULL,
    invoice_date   DATE NOT NULL,
    invoice_status CHAR(1) NOT NULL,
    invoice_amount NUMBER(13, 2)
);

ALTER TABLE rental_invoice ADD CONSTRAINT rental_invoice_pk PRIMARY KEY ( invoice_id );

CREATE TABLE rental_payment (
    payment_id     NUMBER(9) NOT NULL,
    payment_date   DATE NOT NULL,
    payment_method VARCHAR2(30) NOT NULL,
    payment_amount NUMBER(13, 2) NOT NULL,
    card_fname     VARCHAR2(30),
    card_mname     VARCHAR2(30),
    card_lname     VARCHAR2(30),
    invoice_id     NUMBER(9) NOT NULL
);

ALTER TABLE rental_payment ADD CONSTRAINT rental_payment_pk PRIMARY KEY ( payment_id );

CREATE TABLE room_reservation (
    res_date     DATE NOT NULL,
    res_timeslot CHAR(2) NOT NULL,
    room_id      NUMBER(9) NOT NULL,
    cust_id      NUMBER(9) NOT NULL
);

ALTER TABLE room_reservation
    ADD CONSTRAINT room_reservation_pk PRIMARY KEY ( res_date,
                                                     room_id,
                                                     res_timeslot );

CREATE TABLE seminar (
    event_id NUMBER(9) NOT NULL
);

ALTER TABLE seminar ADD CONSTRAINT seminar_pk PRIMARY KEY ( event_id );

CREATE TABLE seminar_attendee (
    registration_id NUMBER(9) NOT NULL,
    author_id       NUMBER(9) NOT NULL,
    event_id        NUMBER(9) NOT NULL
);

ALTER TABLE seminar_attendee ADD CONSTRAINT seminar_attendee_pk PRIMARY KEY ( registration_id );

CREATE TABLE seminar_sponsor (
    event_id       NUMBER(9) NOT NULL,
    sponsor_id     NUMBER(9) NOT NULL,
    sponsor_amount NUMBER(13, 2) NOT NULL
);

ALTER TABLE seminar_sponsor ADD CONSTRAINT seminar_sponsor_pk PRIMARY KEY ( sponsor_id,
                                                                            event_id );

CREATE TABLE sponsor (
    sponsor_id    NUMBER(9) NOT NULL,
    sponsor_email VARCHAR2(30),
    sponsor_phone VARCHAR2(10),
    sponsor_type  CHAR(1) NOT NULL
);

ALTER TABLE sponsor
    ADD CONSTRAINT ch_inh_sponsor CHECK ( sponsor_type IN ( 'I', 'O', 'SPONSOR' ) );

ALTER TABLE sponsor ADD CONSTRAINT sponsor_pk PRIMARY KEY ( sponsor_id );

CREATE TABLE study_room (
    room_id  NUMBER(9) NOT NULL,
    capacity NUMBER(2) NOT NULL
);

ALTER TABLE study_room ADD CONSTRAINT study_room_pk PRIMARY KEY ( room_id );

ALTER TABLE book_author
    ADD CONSTRAINT book_author_author_fk FOREIGN KEY ( author_id )
        REFERENCES author ( author_id );

ALTER TABLE book_author
    ADD CONSTRAINT book_author_book_fk FOREIGN KEY ( book_id )
        REFERENCES book ( book_id );

ALTER TABLE book_copy
    ADD CONSTRAINT book_copy_book_fk FOREIGN KEY ( book_id )
        REFERENCES book ( book_id );

ALTER TABLE book_rental
    ADD CONSTRAINT book_rental_book_copy_fk FOREIGN KEY ( copy_id )
        REFERENCES book_copy ( copy_id );

ALTER TABLE book_rental
    ADD CONSTRAINT book_rental_customer_fk FOREIGN KEY ( cust_id )
        REFERENCES customer ( cust_id );

ALTER TABLE book_rental
    ADD CONSTRAINT book_rental_rental_invoice_fk FOREIGN KEY ( invoice_id )
        REFERENCES rental_invoice ( invoice_id );

ALTER TABLE exhib_expense
    ADD CONSTRAINT exhib_expense_exhibition_fk FOREIGN KEY ( event_id )
        REFERENCES exhibition ( event_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE exhibition_attendee
    ADD CONSTRAINT exhibition_attendee_customer_fk FOREIGN KEY ( cust_id )
        REFERENCES customer ( cust_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE exhibition_attendee
    ADD CONSTRAINT exhibition_attendee_exhibition_fk FOREIGN KEY ( event_id )
        REFERENCES exhibition ( event_id );

ALTER TABLE exhibition
    ADD CONSTRAINT exhibition_event_fk FOREIGN KEY ( event_id )
        REFERENCES event ( event_id );

ALTER TABLE individual
    ADD CONSTRAINT individual_sponsor_fk FOREIGN KEY ( sponsor_id )
        REFERENCES sponsor ( sponsor_id );

ALTER TABLE organization
    ADD CONSTRAINT organization_sponsor_fk FOREIGN KEY ( sponsor_id )
        REFERENCES sponsor ( sponsor_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE rental_payment
    ADD CONSTRAINT rental_payment_rental_invoice_fk FOREIGN KEY ( invoice_id )
        REFERENCES rental_invoice ( invoice_id );

ALTER TABLE room_reservation
    ADD CONSTRAINT room_reservation_customer_fk FOREIGN KEY ( cust_id )
        REFERENCES customer ( cust_id );

ALTER TABLE room_reservation
    ADD CONSTRAINT room_reservation_study_room_fk FOREIGN KEY ( room_id )
        REFERENCES study_room ( room_id );

ALTER TABLE seminar_attendee
    ADD CONSTRAINT seminar_attendee_author_fk FOREIGN KEY ( author_id )
        REFERENCES author ( author_id );

ALTER TABLE seminar_attendee
    ADD CONSTRAINT seminar_attendee_seminar_fk FOREIGN KEY ( event_id )
        REFERENCES seminar ( event_id );

ALTER TABLE seminar
    ADD CONSTRAINT seminar_event_fk FOREIGN KEY ( event_id )
        REFERENCES event ( event_id );

ALTER TABLE seminar_sponsor
    ADD CONSTRAINT seminar_sponsor_seminar_fk FOREIGN KEY ( event_id )
        REFERENCES seminar ( event_id );

ALTER TABLE seminar_sponsor
    ADD CONSTRAINT seminar_sponsor_sponsor_fk FOREIGN KEY ( sponsor_id )
        REFERENCES sponsor ( sponsor_id );

CREATE OR REPLACE TRIGGER arc_fkarc_3_seminar BEFORE
    INSERT OR UPDATE OF event_id ON seminar
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.event_type
    INTO d
    FROM
        event a
    WHERE
        a.event_id = :new.event_id;

    IF ( d IS NULL OR d <> 'S' ) THEN
        raise_application_error(-20223, 'FK SEMINAR_EVENT_FK in Table SEMINAR violates Arc constraint on Table EVENT - discriminator column Event_Type doesn''t have value ''S'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_3_exhibition BEFORE
    INSERT OR UPDATE OF event_id ON exhibition
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.event_type
    INTO d
    FROM
        event a
    WHERE
        a.event_id = :new.event_id;

    IF ( d IS NULL OR d <> 'E' ) THEN
        raise_application_error(-20223, 'FK EXHIBITION_EVENT_FK in Table EXHIBITION violates Arc constraint on Table EVENT - discriminator column Event_Type doesn''t have value ''E'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_4_individual BEFORE
    INSERT OR UPDATE OF sponsor_id ON individual
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.sponsor_type
    INTO d
    FROM
        sponsor a
    WHERE
        a.sponsor_id = :new.sponsor_id;

    IF ( d IS NULL OR d <> 'I' ) THEN
        raise_application_error(-20223, 'FK INDIVIDUAL_SPONSOR_FK in Table INDIVIDUAL violates Arc constraint on Table SPONSOR - discriminator column Sponsor_Type doesn''t have value ''I'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_4_organization BEFORE
    INSERT OR UPDATE OF sponsor_id ON organization
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.sponsor_type
    INTO d
    FROM
        sponsor a
    WHERE
        a.sponsor_id = :new.sponsor_id;

    IF ( d IS NULL OR d <> 'O' ) THEN
        raise_application_error(-20223, 'FK ORGANIZATION_SPONSOR_FK in Table ORGANIZATION violates Arc constraint on Table SPONSOR - discriminator column Sponsor_Type doesn''t have value ''O'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            20
-- CREATE INDEX                             1
-- ALTER TABLE                             42
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   3
-- WARNINGS                                 0
